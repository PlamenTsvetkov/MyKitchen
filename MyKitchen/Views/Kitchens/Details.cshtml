@model SingleKitchenViewModel

@{
    this.ViewData["Title"] = "Kitchen";
    void DisplayComments(int? parentId)
    {
        var comments = this.Model.Comments.Where(x => x.ParentId == parentId);
        if (!comments.Any())
        {
            return;
        }

        @foreach (var comment in comments)
        {
            <div class="container-fluid mt-100">
                <div class="row">
                    <div class="col-md-12">
                        <div class="card mb-4">
                            <div class="card-header">
                                <div class="media flex-wrap w-100 align-items-center">
                                    <img src="https://res.cloudinary.com/dxfq3iotg/image/upload/v1574583246/AAA/2.jpg" class="d-block ui-w-40 rounded-circle" alt="">
                                    <div class="media-body ml-3">
                                        @comment.UserName
                                        <div class="text-muted small">
                                            <time datetime="@comment.CreatedOn.ToString("O")"></time>
                                        </div>
                                    </div>
                                    <div class="text-muted small ml-3">
                                        @if (this.User.Identity.IsAuthenticated)
                                        {
                                            <div class="px-4 pt-3"> <button type="button" class="btn btn-secondary" onclick="showAddCommentForm(@comment.Id)"><i class="fa fa-plus"></i>&nbsp; Answer</button> </div>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="card-body">
                                <article>
                                    @Html.Raw(comment.SanitizedContent)
                                </article>
                                @{
                                    DisplayComments(comment.Id);
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
}
@if (this.TempData.ContainsKey("Message"))
{
    <div class="alert alert-success">@this.TempData["Message"]</div>
}
<div class="single-recipe-layout1">
    <div class="ctg-name">@Model.CategoryName</div>
    <h2 class="item-title">@this.ViewData["Title"]</h2>
    <div class="row mb-4">
        <div class="col-xl-9 col-12">
            <ul class="entry-meta">
                <li class="single-meta">
                    <i class="far fa-calendar-alt"></i>
                    @Model.CreatedOn.ToShortDateString()
                </li>
                <li class="single-meta">
                    <i class="fas fa-user"></i> by
                    <span>@Model.UserName</span>
                </li>
                <li class="single-meta">
                    <ul class="item-rating">
                        <li class="star-fill" data-vote="1"><i class="fas fa-star"></i></li>
                        <li class="star-fill" data-vote="2"><i class="fas fa-star"></i></li>
                        <li class="star-fill" data-vote="3"><i class="fas fa-star"></i></li>
                        <li class="star-fill" data-vote="4"><i class="fas fa-star"></i></li>
                        <li class="star-fill" data-vote="5"><i class="fas fa-star"></i></li>
                        <li><span id="averageVoteValue">@Model.AverageVote.ToString("0.0")</span><span> / 5</span> </li>
                    </ul>
                </li>
                @if (User.Identity.IsAuthenticated)
                {
                    @if (User.Id() == Model.UserId)
                    {
                        <li class="single-meta">
                            <a asp-controller="Kitchens" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">Edit</a>
                        </li>
                        <li class="single-meta">
                            <form method="post" asp-action="Delete" id="deleteForm" asp-route-id="@Model.Id">
                                <button class="btn btn-danger" data-toggle="modal" data-target="#deleteModal">Delete</button>
                            </form>
                        </li>
                    }
                }
            </ul>
        </div>
    </div>
    <div class="item-figure">
        <img class="img-fluid w-100" src="@Model.ImageUrl" alt="@Model.UserName" />
    </div>
    <div class="item-feature">
        <ul>
            <li>
                <div class="feature-wrap">
                    <div class="media">
                        <div class="feature-icon">
                            <i class="far fa-clock"></i>
                        </div>
                        <div class="media-body space-sm">
                            <div class="feature-title">PREP TIME</div>
                            <div class="feature-sub-title">@Model.PreparationTime Days</div>
                        </div>
                    </div>
                </div>
            </li>
            <li>
                <div class="feature-wrap">
                    <div class="media">
                        <div class="feature-icon">
                            <i class="fa-solid fa-comment-dollar"></i>
                        </div>
                        <div class="media-body space-sm">
                            <div class="feature-title">PRICE</div>
                            <div class="feature-sub-title">@Model.Price Euros</div>
                        </div>
                    </div>
                </div>
            </li>
            <li>
                <div class="feature-wrap">
                    <div class="media">
                        <div class="feature-icon">
                            <i class="fa-solid fa-ruler"></i>
                        </div>
                        <div class="media-body space-sm">
                            <div class="feature-title">KITCHEN METER</div>
                            <div class="feature-sub-title">
                                @Model.KitchenMeter Meters
                            </div>
                        </div>
                    </div>
                </div>
            </li>
            <li>
                <div class="feature-wrap">
                    <div class="media">
                        <div class="feature-icon">
                            <i class="fa-solid fa-hammer"></i>
                        </div>
                        <div class="media-body space-sm">
                            <div class="feature-title">MANUFACTURER</div>
                            <div class="feature-sub-title">
                                @Model.МanufacturerName
                            </div>
                        </div>
                    </div>
                </div>
            </li>
        </ul>
    </div>
    <div class="making-elements-wrap">
        <div class="row">
            <div class="col-md-6">
                <p class="item-description">
                    @Model.Description
                </p>
            </div>
            <div class="col-md-6">
                <div class="ingridients-wrap">
                    <h3 class="item-title"><i class="fa-solid fa-palette"></i>Colors</h3>
                    @foreach (var color in Model.KitchensColorsColor)
                    {
                        <div class="checkbox checkbox-primary">
                            <label for="checkbox1">@color.Name</label>
                        </div>
                    }
                </div>
                   <div class="ingridients-wrap">
                    <h3 class="item-title"><i class="fa fa-list-ol"></i>Material</h3>
                       <div class="checkbox checkbox-primary">
                       <label for="checkbox1">@Model.TypeOfDoorMaterial.ToString()</label>
                       </div>
                </div>
            </div>
            <div class="card-body">

                @if (this.User.Identity.IsAuthenticated)
                {
                    <div class="px-4 pt-3"> <button type="button" class="btn btn-primary float-right" onclick="showAddCommentForm(0)"><i class="fa fa-plus"></i>&nbsp; Comment</button> </div>
                    <div class="clearfix"></div>
                }
                @{
                    DisplayComments(null);
                }
            </div>
        </div>
    </div>
</div>

<script src="/lib/tinymce/tinymce.min.js" type="text/javascript"></script>
<script type="text/javascript">
    tinymce.init({
        selector: "textarea",
        plugins: ["image paste table link code media"]
    });
</script>

<div>
    <form asp-controller="Comments" asp-action="Create" method="post" id="AddCommentForm" style="display: none">
        <input type="hidden" name="KitchenId" value="@this.Model.Id" />
        <input type="hidden" name="GetInformation" value="@this.Model.GetInformation()" />
        <input type="hidden" name="ParentId" value="0" />
        <div>
            <label for="Content"></label>
            <textarea name="Content" id="Content" class="form-control"></textarea>
        </div>
        <div>
            <input type="submit" class="btn btn-primary" value="Add comment" />
        </div>
    </form>
</div>




<form method="post" id="antiForgeryForm"></form>
@section Scripts {
<script>
    function showAddCommentForm(parentId) {
          $("#AddCommentForm input[name='ParentId']").val(parentId);
          $("#AddCommentForm").show();
          $([document.documentElement, document.body]).animate({
              scrollTop: $("#AddCommentForm").offset().top
          }, 1000);
      }

      $("li[data-vote]").each(function (el) {
          $(this).click(function () {
              var value = $(this).attr("data-vote");
              var kitchenId = @Model.Id;
              var antiForgeryToken = $('#antiForgeryForm input[name=__RequestVerificationToken]').val();
              var data = { kitchenId: kitchenId, value: value };
              $.ajax({
                  type: "POST",
                  url: "/api/Votes",
                  data: JSON.stringify(data),
                  headers: {
                      'X-CSRF-TOKEN': antiForgeryToken
                  },
                  success: function (data) {
                      $('#averageVoteValue').html(data.averageVote.toFixed(1));
                  },
                  contentType: 'application/json',
              });
          })
      });
</script>
  }

<div class="modal" tabindex="-1" role="dialog" id="deleteModal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <p>Do you want to delete this kitchen?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" onclick="deleteForm.submit()">Yes</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>
